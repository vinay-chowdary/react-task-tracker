{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/TaskContext.jsx","components/Task.jsx","components/Tasks.jsx","App.js","index.js"],"names":["Button","color","text","className","style","backgroundColor","onClick","defaultProps","Header","title","TaskContext","createContext","TaskProvider","props","useState","id","remainder","date","tasks","setTasks","Provider","value","children","Task","task","useContext","userSelect","onDoubleClick","e","prevTasks","map","IconButton","filter","Tasks","length","index","App","ReactDOM","render","document","getElementById"],"mappings":"oMAEA,SAASA,EAAT,GAAkC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAKrB,OACI,wBACIC,UAAU,MACVC,MAAO,CAAEC,gBAAiBJ,GAC1BK,QAPY,aAIhB,SAKKJ,IAKbF,EAAOO,aAAe,CAClBN,MAAO,OACPC,KAAM,OASKF,QC1BTQ,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACI,yBAAQN,UAAU,SAAlB,UACI,6BAAKM,IACL,cAAC,EAAD,QAOZD,EAAOD,aAAe,CAClBE,MAAO,gBASID,Q,QCrBFE,EAAcC,0BAGdC,EAAe,SAACC,GAAW,IAAD,EACTC,mBAAS,CAAC,CAAEC,GAAI,EAAGb,KAAM,cAAec,WAAW,EAAMC,KAAM,gBAAkB,CAAEF,GAAI,EAAGb,KAAM,cAAec,WAAW,KADjH,mBAC5BE,EAD4B,KACrBC,EADqB,KAEnC,OACI,cAACT,EAAYU,SAAb,CAAsBC,MAAO,CAACH,EAAOC,GAArC,SACKN,EAAMS,Y,iCCqCJC,EA1CF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAGFC,qBAAWf,GAAvBS,EAHc,oBAuBvB,OACI,sBACIhB,UAAS,eAAUqB,EAAKR,WAAa,aACrCZ,MAAO,CAAEsB,WAAY,QACrBC,cAAe,SAACC,GAbA,IAACb,IAcGS,EAAKT,GAb7BI,GAAS,SAACU,GAAD,OACLA,EAAUC,KAAI,SAACN,GAAD,OACVA,EAAKT,KAAOA,EAAZ,2BAAsBS,GAAtB,IAA4BR,WAAYQ,EAAKR,YAAcQ,SAOnE,UAQI,+BAAKA,EAAKtB,KACN,cAAC6B,EAAA,EAAD,CAAYzB,QAAS,WA1Bd,IAACS,IA0BgCS,EAAKT,GAzBrDI,GAAS,SAACU,GAAD,OACLA,EAAUG,QAAO,SAACR,GAAD,OAAUA,EAAKT,KAAOA,SAwBnC,SACI,cAAC,IAAD,CAAYX,MAAO,CAAEH,MAAO,eAEpC,4BAAIuB,EAAKP,WC1BNgB,EAXD,WAAO,IAAD,EACCR,qBAAWf,GAArBQ,EADS,oBAEhB,OAGI,aADA,CACA,qBACKA,EAAMgB,OAAS,EAAIhB,EAAMY,KAAI,SAACN,EAAMW,GAAP,OAAkB,cAAE,EAAF,CAAmBX,KAAMA,GAAbW,MAA0B,qBAAIhC,UAAU,UAAd,+CAA0D,qCAA1D,gCCMnFiC,MAZf,WACE,OAEE,cAAC,EAAD,UACE,sBAAKjC,UAAU,gBAAf,UACE,cAAC,EAAD,CAAQM,MAAM,iBACd,cAAC,EAAD,UCLR4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed1cfc56.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Button({ color, text }) {\n\n    const handleClick = () => {\n    }\n\n    return (\n        <button\n            className=\"btn\"\n            style={{ backgroundColor: color }}\n            onClick={handleClick}\n        >\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: '#000',\n    text: 'Add'\n}\n\nButton.propTypes = {\n    color: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button;","import PropTypes from 'prop-types'\nimport Button from './Button';\n\nconst Header = ({ title }) => {\n    return (\n        <header className=\"header\">\n            <h1>{title}</h1>\n            <Button />\n        </header>\n    )\n}\n\n\n//default props --> incase no props were passed\nHeader.defaultProps = {\n    title: \"Task Tracker\"\n}\n\n\n//set data types for props... isRequired is optional\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import React, { useState, createContext } from 'react';\n\n// create context, this will be used in any component which is child to TaskProvider\nexport const TaskContext = createContext();\n\n// wrap the components that needs the state of tasks with this TaskProvider component\nexport const TaskProvider = (props) => {\n    const [tasks, setTasks] = useState([{ id: 1, text: \"hey idiot 1\", remainder: true, date: \"9th feb 2020\" }, { id: 2, text: \"hey idiot 2\", remainder: false }]);\n    return (\n        <TaskContext.Provider value={[tasks, setTasks]}>\n            {props.children}\n        </TaskContext.Provider>\n    );\n}","import DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport { TaskContext } from './TaskContext';\nimport { useContext } from 'react';\n\nconst Task = ({ task }) => {\n\n    // using Context Api to track state of list of tasks\n    const [, setTasks] = useContext(TaskContext);\n\n\n    // invoke the function when delete icon is clicked to delete the task and update the state\n    const deleteTask = (id) => {\n        setTasks((prevTasks) => (\n            prevTasks.filter((task) => task.id !== id)\n        ))\n    }\n\n    // toggle remainder when double clicked on task div\n    const toggleRemainder = (id) => {\n        setTasks((prevTasks) => (\n            prevTasks.map((task) => (\n                task.id === id ? { ...task, remainder: !task.remainder } : task\n            ))\n        ))\n    }\n\n\n    return (\n        <div\n            className={`task ${task.remainder && \"remainder\"}`}\n            style={{ userSelect: \"none\" }}      // prevent user to copy text\n            onDoubleClick={(e) => {\n                toggleRemainder(task.id);\n            }}\n        >\n\n            <h3>{task.text}\n                <IconButton onClick={() => { deleteTask(task.id) }} >\n                    <DeleteIcon style={{ color: \"#f00\" }} />\n                </IconButton></h3>\n            <p>{task.date}</p>\n\n        </div >\n    );\n}\n\nexport default Task;\n","import { useContext } from 'react';\nimport { TaskContext } from \"../components/TaskContext\";\nimport Task from './Task';\n\nconst Tasks = () => {\n    const [tasks,] = useContext(TaskContext);\n    return (\n\n        // <></> this is called react fragment\n        <>\n            {tasks.length > 0 ? tasks.map((task, index) => (< Task key={index} task={task} />)) : <h4 className=\"no-task\">** no tasks to be shown, Click on <i>Add </i> button to add new Task</h4>}\n        </>\n    )\n}\n\nexport default Tasks\n","import Header from \"./components/Header\";\nimport { TaskProvider } from \"./components/TaskContext\";\nimport Tasks from \"./components/Tasks\";\n\nfunction App() {\n  return (\n\n    <TaskProvider>\n      <div className=\"App container\">\n        <Header title=\"Task Tracker\" />\n        <Tasks />\n      </div>\n    </TaskProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}