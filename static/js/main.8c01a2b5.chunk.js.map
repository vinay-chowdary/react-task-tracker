{"version":3,"sources":["components/TaskContext.jsx","components/AddTask.jsx","components/ShowFormContext.jsx","components/Button.jsx","components/Header.jsx","components/Task.jsx","components/Tasks.jsx","components/Footer.jsx","components/QuickLinks.jsx","App.js","assets/images/img1.jpg","index.js"],"names":["TaskContext","createContext","TaskProvider","props","useState","tasks","setTasks","Provider","value","children","useStyles","makeStyles","theme","root","marginBottom","margin","width","button","color","initialValues","text","date","moment","format","slice","AddTask","classes","checked","setChecked","newTask","setNewTask","useContext","handleChange","e","target","name","prevState","autoComplete","className","onSubmit","preventDefault","addTask","id","uuidv4","remainder","console","log","TextField","spellCheck","required","label","variant","type","placeholder","onChange","InputLabelProps","shrink","FormControlLabel","labelPlacement","control","Checkbox","Button","startIcon","ShowFormContext","ShowFormProvider","showForm","setShowForm","style","backgroundColor","onClick","defaultProps","Header","title","location","useLocation","pathname","Task","task","userSelect","onDoubleClick","prevTasks","map","IconButton","filter","Tasks","length","index","Footer","to","QuickLinks","rel","href","fontSize","App","basename","process","path","exact","render","ReactDOM","background","img1","document","getElementById"],"mappings":"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","file":"static/js/main.8c01a2b5.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\n\n// create context, this will be used in any component which is child to TaskProvider\nexport const TaskContext = createContext();\n\n// wrap the components that needs the state of tasks with this TaskProvider component\nexport const TaskProvider = (props) => {\n    const [tasks, setTasks] = useState([]);\n    return (\n        <TaskContext.Provider value={[tasks, setTasks]}>\n            {props.children}\n        </TaskContext.Provider>\n    );\n}","import { FormControlLabel, TextField, makeStyles, Button, Checkbox } from '@material-ui/core'\nimport SaveIcon from '@material-ui/icons/Save'\nimport { useState, useContext } from 'react';\nimport moment from 'moment';\nimport { TaskContext } from './TaskContext'\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: \"2rem\",\n        '& .MuiTextField-root': {\n            margin: \"auto\",\n            marginBottom: \"1rem\",\n            width: \"100%\",\n        },\n\n    },\n    button: {\n        color: \"#fff\",\n        width: \"100%\",\n    }\n}));\n\nconst initialValues = {\n    text: \"\",\n    date: moment().format().slice(0, 16)\n}\n\nconst AddTask = () => {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(true);\n    const [newTask, setNewTask] = useState(initialValues);\n    const [, setTasks] = useContext(TaskContext);\n\n    const handleCheck = (e) => {\n        setChecked(prevState => !prevState);\n    }\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewTask((prevState) => ({\n            ...prevState,\n            [name]: value\n        }))\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const addTask = { id: uuidv4(), ...newTask, remainder: checked }\n        console.log(addTask);\n        setTasks((prevState) => (\n            [...prevState, addTask]\n        ))\n        setNewTask(initialValues);\n    }\n    return (\n\n        <form autoComplete=\"off\" className={classes.root} onSubmit={handleSubmit}>\n            <TextField\n                name=\"text\"\n                spellCheck=\"false\"\n                required\n                label=\"Task\"\n                id=\"text\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Panel Meeting\"\n                onChange={handleChange}\n                value={newTask.text}\n            />\n            <TextField\n                id=\"task-due-time\"\n                label=\"Due Date &amp; Time\"\n                type=\"datetime-local\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                variant=\"outlined\"\n                required\n                onChange={handleChange}\n                value={newTask.date}\n                name=\"date\"\n            />\n            <FormControlLabel\n                label=\"Set Remainder\"\n                labelPlacement=\"start\"\n                control={\n                    < Checkbox\n                        checked={checked}\n                        onChange={handleCheck}\n                        name=\"checked\"\n                        color=\"primary\"\n\n                    />\n                }\n            />\n            <Button\n                type=\"submit\"\n                startIcon={<SaveIcon />}\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Save\n            </Button>\n        </form >\n    )\n}\n\nexport default AddTask\n","import { useState, createContext } from 'react'\n\nconst ShowFormContext = createContext();\n\nconst ShowFormProvider = (props) => {\n    const [showForm, setShowForm] = useState(false);\n    return (\n        <ShowFormContext.Provider value={[showForm, setShowForm]}>\n            {props.children}\n        </ShowFormContext.Provider>\n    );\n}\n\nexport { ShowFormContext, ShowFormProvider };\n","import PropTypes from 'prop-types';\nimport { ShowFormContext } from './ShowFormContext'\nimport { useContext } from 'react'\n\nfunction Button({ color, text }) {\n    const [showForm, setShowForm] = useContext(ShowFormContext);\n    const handleClick = () => {\n        setShowForm((prevState) => (!prevState))\n    }\n\n    return (\n        <button\n            className=\"btn\"\n            style={{ backgroundColor: showForm ? \"red\" : color }}\n            onClick={handleClick}\n        >\n            {showForm ? \"Close\" : \"Add\"}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: \"green\",\n    text: \"Add\"\n}\n\nButton.propTypes = {\n    color: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button;","import PropTypes from 'prop-types'\nimport Button from './Button';\nimport { useLocation } from \"react-router-dom\";\n\nconst Header = ({ title }) => {\n    const location = useLocation();\n    return (\n        <header className=\"header\">\n            {location.pathname === \"/\" ? <h1>{title}</h1> : <h1>My Profile Links</h1>}\n            {location.pathname === \"/\" && <Button />}\n\n        </header>\n    )\n}\n\n\n//default props --> incase no props were passed\nHeader.defaultProps = {\n    title: \"Task Tracker\"\n}\n\n\n//set data types for props... isRequired is optional\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport { TaskContext } from './TaskContext';\nimport { useContext } from 'react';\nimport moment from 'moment'\n\nconst Task = ({ task }) => {\n\n    // using Context Api to track state of list of tasks\n    const [, setTasks] = useContext(TaskContext);\n\n\n    // invoke the function when delete icon is clicked to delete the task and update the state\n    const deleteTask = (id) => {\n        setTasks((prevTasks) => (\n            prevTasks.filter((task) => task.id !== id)\n        ))\n    }\n\n    // toggle remainder when double clicked on task div\n    const toggleRemainder = (id) => {\n        setTasks((prevTasks) => (\n            prevTasks.map((task) => (\n                task.id === id ? { ...task, remainder: !task.remainder } : task\n            ))\n        ))\n    }\n\n\n    return (\n        <div\n            className={`task ${task.remainder && \"remainder\"}`}\n            style={{ userSelect: \"none\" }}      // prevent user to copy text\n            onDoubleClick={(e) => {\n                toggleRemainder(task.id);\n            }}\n        >\n\n            <h3>{task.text}\n                <IconButton onClick={() => { deleteTask(task.id) }} >\n                    <DeleteIcon style={{ color: \"#f00\" }} />\n                </IconButton></h3>\n            <p>{moment(task.date).format(\"ddd, Do MMM YYYY, h:mm a\")}</p>\n\n        </div >\n    );\n}\n\nexport default Task;\n","import { useContext } from 'react';\nimport { TaskContext } from \"../components/TaskContext\";\nimport Task from './Task';\n\nconst Tasks = () => {\n    const [tasks,] = useContext(TaskContext);\n    return (\n\n        // <></> this is called react fragment\n        <>\n            {tasks.length > 0 ? tasks.map((task, index) => (< Task key={index} task={task} />)) : <h4 className=\"no-task\">** no tasks to show, Click on <i>Add </i> button to add new Task</h4>}\n        </>\n    )\n}\n\nexport default Tasks\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nconst Footer = () => {\n    return (\n        <footer>\n            <h4>copyright&copy; 2021</h4>\n            <Link to=\"/quick-links\">Quick Links</Link>\n        </footer>\n    )\n}\nexport default Footer\n","import { Link } from \"react-router-dom\"\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nconst QuickLinks = () => {\n    return (\n        <div className=\"quick-links-page\">\n            <div className=\"quick-links\">\n                <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/in/vinaychowdary\"><LinkedInIcon fontSize=\"large\" /></a>\n                <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/vinay-chowdary\"><GitHubIcon fontSize=\"large\" /></a>\n            </div>\n            <Link to=\"/\">Go Back</Link>\n        </div>\n    )\n}\n\nexport default QuickLinks\n","import AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport { TaskProvider } from \"./components/TaskContext\";\nimport Tasks from \"./components/Tasks\";\nimport { ShowFormContext } from './components/ShowFormContext'\nimport { useContext } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Footer from './components/Footer'\nimport QuickLinks from \"./components/QuickLinks\";\n\nfunction App() {\n  const [showForm] = useContext(ShowFormContext);\n  return (\n\n    <Router basename={process.env.PUBLIC_URL}>\n      <TaskProvider>\n\n        <div className=\"App container\">\n          <Header />\n          <Route path=\"/\" exact render={(props) => (\n            <>\n              {showForm && <AddTask />}\n              <Tasks />\n              <Footer />\n            </>\n          )} />\n          <Route path=\"/quick-links\" render={\n            (props) => (\n              <QuickLinks />\n            )\n          } />\n        </div>\n      </TaskProvider >\n    </Router>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/img1.2d975630.jpg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ShowFormProvider } from './components/ShowFormContext'\n// import img1 from \"./assets/images/img2.jpg\"\nimport img1 from \"./assets/images/img1.jpg\"\n\nReactDOM.render(\n  <ShowFormProvider>\n    <div className=\"background\" style={{ background: `url('${img1}') no-repeat center/cover` }}></div>\n    <App />\n  </ShowFormProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}